"""empty message

Revision ID: b3920cb0bf49
Revises: 3dcef2e3c442
Create Date: 2019-10-11 03:48:54.719994

"""

# revision identifiers, used by Alembic.
revision = 'b3920cb0bf49'
down_revision = '3dcef2e3c442'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(u'app_user_residence_country_id', 'app_user', type_='foreignkey')
    op.drop_constraint(u'app_user_user_category_id', 'app_user', type_='foreignkey')
    op.drop_constraint(u'app_user_nationality_country_id', 'app_user', type_='foreignkey')

    op.drop_table('event_role')
    op.drop_table('review_score')
    op.drop_table('review_response')
    op.drop_table('review_question')
    op.drop_table('review_form')
    op.drop_table('response_reviewer')
    op.drop_table('answer')
    op.drop_table('response')
    op.drop_table('user_category')
    op.drop_table('country')
    op.drop_table('question')
    op.drop_table('section')
    op.drop_table('application_form')
    op.drop_table('event')


    op.add_column('app_user', sa.Column('camera1Ip', sa.String(length=100), nullable=False))
    op.add_column('app_user', sa.Column('camera1Name', sa.String(length=100), nullable=False))
    op.add_column('app_user', sa.Column('camera2Ip', sa.String(length=100), nullable=False))
    op.add_column('app_user', sa.Column('camera2Name', sa.String(length=100), nullable=False))
    op.add_column('app_user', sa.Column('camera3Ip', sa.String(length=100), nullable=False))
    op.add_column('app_user', sa.Column('camera3Name', sa.String(length=100), nullable=False))
    
    op.drop_column('app_user', 'is_deleted')
    op.drop_column('app_user', 'nationality_country_id')
    op.drop_column('app_user', 'residence_country_id')
    op.drop_column('app_user', 'user_title')
    op.drop_column('app_user', 'user_category_id')
    op.drop_column('app_user', 'affiliation')
    op.drop_column('app_user', 'deleted_datetime_utc')
    op.drop_column('app_user', 'department')
    op.drop_column('app_user', 'is_admin')
    op.drop_column('app_user', 'user_disability')
    op.drop_column('app_user', 'user_gender')
    op.drop_column('app_user', 'user_primaryLanguage')
    op.drop_column('app_user', 'active')
    op.drop_column('app_user', 'user_dateOfBirth')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('app_user', sa.Column('user_dateOfBirth', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('app_user', sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('app_user', sa.Column('user_primaryLanguage', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('app_user', sa.Column('user_gender', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('app_user', sa.Column('user_disability', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('app_user', sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('app_user', sa.Column('department', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('app_user', sa.Column('deleted_datetime_utc', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('app_user', sa.Column('affiliation', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('app_user', sa.Column('user_category_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('app_user', sa.Column('user_title', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('app_user', sa.Column('residence_country_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('app_user', sa.Column('nationality_country_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('app_user', sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_foreign_key(u'app_user_nationality_country_id', 'app_user', 'country', ['nationality_country_id'], ['id'])
    op.create_foreign_key(u'app_user_user_category_id', 'app_user', 'user_category', ['user_category_id'], ['id'])
    op.create_foreign_key(u'app_user_residence_country_id', 'app_user', 'country', ['residence_country_id'], ['id'])
    op.drop_column('app_user', 'camera3Name')
    op.drop_column('app_user', 'camera3Ip')
    op.drop_column('app_user', 'camera2Name')
    op.drop_column('app_user', 'camera2Ip')
    op.drop_column('app_user', 'camera1Name')
    op.drop_column('app_user', 'camera1Ip')
    op.create_table('answer',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('response_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('question_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['question_id'], [u'question.id'], name=u'answer_question_id_fkey'),
    sa.ForeignKeyConstraint(['response_id'], [u'response.id'], name=u'answer_response_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'answer_pkey')
    )
    op.create_table('response_reviewer',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('response_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reviewer_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['response_id'], [u'response.id'], name=u'response_reviewer_response_id_fkey'),
    sa.ForeignKeyConstraint(['reviewer_user_id'], [u'app_user.id'], name=u'response_reviewer_reviewer_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'response_reviewer_pkey')
    )
    op.create_table('review_score',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('review_response_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('review_question_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['review_question_id'], [u'review_question.id'], name=u'review_score_review_question_id_fkey'),
    sa.ForeignKeyConstraint(['review_response_id'], [u'review_response.id'], name=u'review_score_review_response_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'review_score_pkey')
    )
    op.create_table('section',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('section_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('application_form_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['application_form_id'], [u'application_form.id'], name=u'section_application_form_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'section_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('question',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('question_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('application_form_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('section_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=25), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('headline', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('options', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_required', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('placeholder', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('validation_regex', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('validation_text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['application_form_id'], [u'application_form.id'], name=u'question_application_form_id_fkey'),
    sa.ForeignKeyConstraint(['section_id'], [u'section.id'], name=u'question_section_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'question_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('event',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('event_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'event_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('country',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('country_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'country_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_category',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('user_category_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('group', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'user_category_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('review_response',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('review_form_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reviewer_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('response_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('submitted_timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['response_id'], [u'response.id'], name=u'review_response_response_id_fkey'),
    sa.ForeignKeyConstraint(['review_form_id'], [u'review_form.id'], name=u'review_response_review_form_id_fkey'),
    sa.ForeignKeyConstraint(['reviewer_user_id'], [u'app_user.id'], name=u'review_response_reviewer_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'review_response_pkey')
    )
    op.create_table('review_question',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('review_form_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('question_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('headline', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('placeholder', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('options', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('is_required', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('order', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('validation_regex', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('validation_text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('weight', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['question_id'], [u'question.id'], name=u'review_question_question_id_fkey'),
    sa.ForeignKeyConstraint(['review_form_id'], [u'review_form.id'], name=u'review_question_review_form_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'review_question_pkey')
    )
    op.create_table('application_form',
    sa.Column('id', sa.INTEGER(), server_default=sa.text(u"nextval('application_form_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_open', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deadline', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], [u'event.id'], name=u'application_form_event_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'application_form_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('response',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('application_form_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_submitted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('submitted_timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_withdrawn', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('withdrawn_timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('started_timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['application_form_id'], [u'application_form.id'], name=u'response_application_form_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], [u'app_user.id'], name=u'response_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'response_pkey')
    )
    op.create_table('review_form',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('application_form_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_open', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deadline', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['application_form_id'], [u'application_form.id'], name=u'review_form_application_form_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'review_form_pkey')
    )
    op.create_table('event_role',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], [u'event.id'], name=u'event_role_event_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], [u'app_user.id'], name=u'event_role_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'event_role_pkey')
    )
    # ### end Alembic commands ###
